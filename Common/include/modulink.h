/************************************************************/
// Automatically generated C header file from CAN DBC file
// Source file name: modulink.dbc
// Date created: 2024-06-28
/************************************************************/




/************************************************************/
//====================Messages Proprieties====================
/************************************************************/



#define MODULINK_CAN_MSG_RECEIVE_ID 0x00ff0300
#define MODULINK_CAN_MSG_RECEIVE_MASK 0x1f0003ff



/************************************************************/
// Message: IHM_COMMANDS_1_VPU
/************************************************************/
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_FRAME_ID 0xff0000

typedef struct{
    // CAN_SIG_CONTROL_START , bits 0-0
    uint64_t CAN_SIG_CONTROL_START:1;
    // CAN_SIG_CONTROL_STOP , bits 1-1
    uint64_t CAN_SIG_CONTROL_STOP:1;
    // CAN_SIG_EMERGENCY_SHUTDOWN , bits 2-2
    uint64_t CAN_SIG_EMERGENCY_SHUTDOWN:1;
    // CAN_SIG_PRECHARGE_START , bits 3-3
    uint64_t CAN_SIG_PRECHARGE_START:1;
    // CAN_SIG_CLEAR_FAULT , bits 4-4
    uint64_t CAN_SIG_CLEAR_FAULT:1;
    // CAN_SIG_SOFT_RESET , bits 5-5
    uint64_t CAN_SIG_SOFT_RESET:1;
    // undef 6-63 
    uint64_t undef:58;
}MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_t;

// Signal: CONTROL_START
#define CAN_SIG_CONTROL_START CAN_SIG_CONTROL_START
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_START_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_START_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_START_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_START_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_START_MAXIMUM 1
// Named Values to Signal: CONTROL_START
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_START_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_START_CAN_VALUE_YES 1

// Signal: CONTROL_STOP
#define CAN_SIG_CONTROL_STOP CAN_SIG_CONTROL_STOP
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_STOP_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_STOP_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_STOP_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_STOP_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_STOP_MAXIMUM 1
// Named Values to Signal: CONTROL_STOP
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_STOP_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CONTROL_STOP_CAN_VALUE_YES 1

// Signal: EMERGENCY_SHUTDOWN
#define CAN_SIG_EMERGENCY_SHUTDOWN CAN_SIG_EMERGENCY_SHUTDOWN
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_EMERGENCY_SHUTDOWN_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_EMERGENCY_SHUTDOWN_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_EMERGENCY_SHUTDOWN_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_EMERGENCY_SHUTDOWN_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_EMERGENCY_SHUTDOWN_MAXIMUM 1
// Named Values to Signal: EMERGENCY_SHUTDOWN
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_EMERGENCY_SHUTDOWN_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_EMERGENCY_SHUTDOWN_CAN_VALUE_YES 1

// Signal: PRECHARGE_START
#define CAN_SIG_PRECHARGE_START CAN_SIG_PRECHARGE_START
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_PRECHARGE_START_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_PRECHARGE_START_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_PRECHARGE_START_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_PRECHARGE_START_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_PRECHARGE_START_MAXIMUM 1
// Named Values to Signal: PRECHARGE_START
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_PRECHARGE_START_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_PRECHARGE_START_CAN_VALUE_YES 1

// Signal: CLEAR_FAULT
#define CAN_SIG_CLEAR_FAULT CAN_SIG_CLEAR_FAULT
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CLEAR_FAULT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CLEAR_FAULT_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CLEAR_FAULT_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CLEAR_FAULT_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CLEAR_FAULT_MAXIMUM 1
// Named Values to Signal: CLEAR_FAULT
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CLEAR_FAULT_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_CLEAR_FAULT_CAN_VALUE_YES 1

// Signal: SOFT_RESET
#define CAN_SIG_SOFT_RESET CAN_SIG_SOFT_RESET
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_SOFT_RESET_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_SOFT_RESET_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_SOFT_RESET_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_SOFT_RESET_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_SOFT_RESET_MAXIMUM 1
// Named Values to Signal: SOFT_RESET
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_SOFT_RESET_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_SOFT_RESET_CAN_VALUE_YES 1


/************************************************************/
// Message: IHM_SETPOINTS_1_VPU
/************************************************************/
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_FRAME_ID 0xff0100

typedef struct{
    // CAN_SIG_SETPOINT_ID , bits 0-15
    uint64_t CAN_SIG_SETPOINT_ID:16;
    // CAN_SIG_SETPOINT_REQUESTED , bits 16-31
    uint64_t CAN_SIG_SETPOINT_REQUESTED:16;
    // undef 32-63 
    uint64_t undef:32;
}MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_t;

// Signal: SETPOINT_ID
#define CAN_SIG_SETPOINT_ID CAN_SIG_SETPOINT_ID
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_SETPOINT_ID_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_SETPOINT_ID_SCALE 1
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_SETPOINT_ID_OFFSET 0
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_SETPOINT_ID_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_SETPOINT_ID_MAXIMUM 65535

// Signal: SETPOINT_REQUESTED
#define CAN_SIG_SETPOINT_REQUESTED CAN_SIG_SETPOINT_REQUESTED
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_SETPOINT_REQUESTED_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_SETPOINT_REQUESTED_SCALE 0.01
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_SETPOINT_REQUESTED_OFFSET 0
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_SETPOINT_REQUESTED_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_SETPOINT_REQUESTED_MAXIMUM 100


/************************************************************/
// Message: IHM_MANUAL_EVT_VPU
/************************************************************/
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_FRAME_ID 0xff0200

typedef struct{
    // CAN_SIG_COM_SIG , bits 0-15
    uint64_t CAN_SIG_COM_SIG:16;
    // CAN_SIG_MESSAGE_SIZE , bits 16-31
    uint64_t CAN_SIG_MESSAGE_SIZE:16;
    // CAN_SIG_PAYLOAD_1 , bits 32-47
    uint64_t CAN_SIG_PAYLOAD_1:16;
    // CAN_SIG_PAYLOAD_2 , bits 48-63
    uint64_t CAN_SIG_PAYLOAD_2:16;
}MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_t;

// Signal: COM_SIG
#define CAN_SIG_COM_SIG CAN_SIG_COM_SIG
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_COM_SIG_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_COM_SIG_SCALE 1
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_COM_SIG_OFFSET 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_COM_SIG_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_COM_SIG_MAXIMUM 65535

// Signal: MESSAGE_SIZE
#define CAN_SIG_MESSAGE_SIZE CAN_SIG_MESSAGE_SIZE
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_MESSAGE_SIZE_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_MESSAGE_SIZE_SCALE 1
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_MESSAGE_SIZE_OFFSET 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_MESSAGE_SIZE_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_MESSAGE_SIZE_MAXIMUM 2

// Signal: PAYLOAD_1
#define CAN_SIG_PAYLOAD_1 CAN_SIG_PAYLOAD_1
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_PAYLOAD_1_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_PAYLOAD_1_SCALE 1
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_PAYLOAD_1_OFFSET 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_PAYLOAD_1_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_PAYLOAD_1_MAXIMUM 65535

// Signal: PAYLOAD_2
#define CAN_SIG_PAYLOAD_2 CAN_SIG_PAYLOAD_2
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_PAYLOAD_2_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_PAYLOAD_2_SCALE 1
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_PAYLOAD_2_OFFSET 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_PAYLOAD_2_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_PAYLOAD_2_MAXIMUM 65535


/************************************************************/
// Message: IHM_QSPY_VPU
/************************************************************/
#define MODULINK_CAN_MSG_IHM_QSPY_VPU MODULINK_CAN_MSG_IHM_QSPY_VPU
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_FRAME_ID 0xff0300

typedef struct{
    // CAN_SIG_IHM_BUFFER_DATA_SENDED , bits 0-7
    uint64_t CAN_SIG_IHM_BUFFER_DATA_SENDED:8;
    // CAN_SIG_IHM_QSPY_BYTE_0 , bits 8-15
    uint64_t CAN_SIG_IHM_QSPY_BYTE_0:8;
    // CAN_SIG_IHM_QSPY_BYTE_1 , bits 16-23
    uint64_t CAN_SIG_IHM_QSPY_BYTE_1:8;
    // CAN_SIG_IHM_QSPY_BYTE_2 , bits 24-31
    uint64_t CAN_SIG_IHM_QSPY_BYTE_2:8;
    // CAN_SIG_IHM_QSPY_BYTE_3 , bits 32-39
    uint64_t CAN_SIG_IHM_QSPY_BYTE_3:8;
    // CAN_SIG_IHM_QSPY_BYTE_4 , bits 40-47
    uint64_t CAN_SIG_IHM_QSPY_BYTE_4:8;
    // CAN_SIG_IHM_QSPY_BYTE_5 , bits 48-55
    uint64_t CAN_SIG_IHM_QSPY_BYTE_5:8;
    // CAN_SIG_IHM_QSPY_BYTE_6 , bits 56-63
    uint64_t CAN_SIG_IHM_QSPY_BYTE_6:8;
}MODULINK_CAN_MSG_IHM_QSPY_VPU_t;

// Signal: IHM_BUFFER_DATA_SENDED
#define CAN_SIG_IHM_BUFFER_DATA_SENDED CAN_SIG_IHM_BUFFER_DATA_SENDED
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_BUFFER_DATA_SENDED_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_BUFFER_DATA_SENDED_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_BUFFER_DATA_SENDED_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_BUFFER_DATA_SENDED_MINIMUM 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_BUFFER_DATA_SENDED_MAXIMUM 7

// Signal: IHM_QSPY_BYTE_0
#define CAN_SIG_IHM_QSPY_BYTE_0 CAN_SIG_IHM_QSPY_BYTE_0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_0_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_0_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_0_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_0_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_0_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_1
#define CAN_SIG_IHM_QSPY_BYTE_1 CAN_SIG_IHM_QSPY_BYTE_1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_1_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_1_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_1_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_1_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_1_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_2
#define CAN_SIG_IHM_QSPY_BYTE_2 CAN_SIG_IHM_QSPY_BYTE_2
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_2_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_2_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_2_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_2_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_2_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_3
#define CAN_SIG_IHM_QSPY_BYTE_3 CAN_SIG_IHM_QSPY_BYTE_3
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_3_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_3_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_3_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_3_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_3_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_4
#define CAN_SIG_IHM_QSPY_BYTE_4 CAN_SIG_IHM_QSPY_BYTE_4
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_4_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_4_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_4_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_4_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_4_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_5
#define CAN_SIG_IHM_QSPY_BYTE_5 CAN_SIG_IHM_QSPY_BYTE_5
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_5_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_5_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_5_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_5_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_5_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_6
#define CAN_SIG_IHM_QSPY_BYTE_6 CAN_SIG_IHM_QSPY_BYTE_6
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_6_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_6_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_6_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_6_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_6_MAXIMUM 255


/************************************************************/
// Message: VPU_MEASURES_1_IHM
/************************************************************/
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM MODULINK_CAN_MSG_VPU_MEASURES_1_IHM
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_FRAME_ID 0xff1001

typedef struct{
    // CAN_SIG_VPU_SKIIP_1_CURRENT , bits 0-15
    uint64_t CAN_SIG_VPU_SKIIP_1_CURRENT:16;
    // CAN_SIG_VPU_SKIIP_2_CURRENT , bits 16-31
    uint64_t CAN_SIG_VPU_SKIIP_2_CURRENT:16;
    // CAN_SIG_VPU_SKIIP_1_VOLTAGE , bits 32-47
    uint64_t CAN_SIG_VPU_SKIIP_1_VOLTAGE:16;
    // CAN_SIG_VPU_SKIIP_2_VOLTAGE , bits 48-63
    uint64_t CAN_SIG_VPU_SKIIP_2_VOLTAGE:16;
}MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_t;

// Signal: VPU_SKIIP_1_CURRENT
#define CAN_SIG_VPU_SKIIP_1_CURRENT CAN_SIG_VPU_SKIIP_1_CURRENT
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_1_CURRENT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_1_CURRENT_SCALE 1
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_1_CURRENT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_1_CURRENT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_1_CURRENT_MAXIMUM 3000

// Signal: VPU_SKIIP_2_CURRENT
#define CAN_SIG_VPU_SKIIP_2_CURRENT CAN_SIG_VPU_SKIIP_2_CURRENT
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_2_CURRENT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_2_CURRENT_SCALE 1
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_2_CURRENT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_2_CURRENT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_2_CURRENT_MAXIMUM 3000

// Signal: VPU_SKIIP_1_VOLTAGE
#define CAN_SIG_VPU_SKIIP_1_VOLTAGE CAN_SIG_VPU_SKIIP_1_VOLTAGE
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_1_VOLTAGE_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_1_VOLTAGE_SCALE 1
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_1_VOLTAGE_OFFSET 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_1_VOLTAGE_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_1_VOLTAGE_MAXIMUM 2000

// Signal: VPU_SKIIP_2_VOLTAGE
#define CAN_SIG_VPU_SKIIP_2_VOLTAGE CAN_SIG_VPU_SKIIP_2_VOLTAGE
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_2_VOLTAGE_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_2_VOLTAGE_SCALE 1
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_2_VOLTAGE_OFFSET 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_2_VOLTAGE_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_CAN_SIG_VPU_SKIIP_2_VOLTAGE_MAXIMUM 2000


/************************************************************/
// Message: VPU_MEASURES_2_IHM
/************************************************************/
#define MODULINK_CAN_MSG_VPU_MEASURES_2_IHM MODULINK_CAN_MSG_VPU_MEASURES_2_IHM
#define MODULINK_CAN_MSG_VPU_MEASURES_2_IHM_FRAME_ID 0xff1101

typedef struct{
    // undef 0-63 
    uint64_t undef:64;
}MODULINK_CAN_MSG_VPU_MEASURES_2_IHM_t;


/************************************************************/
// Message: VPU_SETPOINTS_1_IHM
/************************************************************/
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_FRAME_ID 0xff1201

typedef struct{
    // CAN_SIG_VPU_IND_FSBB_CURRENT_SP , bits 0-15
    uint64_t CAN_SIG_VPU_IND_FSBB_CURRENT_SP:16;
    // CAN_SIG_VPU_FSSB_POWER_SP , bits 16-31
    uint64_t CAN_SIG_VPU_FSSB_POWER_SP:16;
    // undef 32-63 
    uint64_t undef:32;
}MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_t;

// Signal: VPU_IND_FSBB_CURRENT_SP
#define CAN_SIG_VPU_IND_FSBB_CURRENT_SP CAN_SIG_VPU_IND_FSBB_CURRENT_SP
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_CAN_SIG_VPU_IND_FSBB_CURRENT_SP_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_CAN_SIG_VPU_IND_FSBB_CURRENT_SP_SCALE 1
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_CAN_SIG_VPU_IND_FSBB_CURRENT_SP_OFFSET 0
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_CAN_SIG_VPU_IND_FSBB_CURRENT_SP_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_CAN_SIG_VPU_IND_FSBB_CURRENT_SP_MAXIMUM 2500

// Signal: VPU_FSSB_POWER_SP
#define CAN_SIG_VPU_FSSB_POWER_SP CAN_SIG_VPU_FSSB_POWER_SP
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_CAN_SIG_VPU_FSSB_POWER_SP_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_CAN_SIG_VPU_FSSB_POWER_SP_SCALE 1
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_CAN_SIG_VPU_FSSB_POWER_SP_OFFSET 0
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_CAN_SIG_VPU_FSSB_POWER_SP_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_CAN_SIG_VPU_FSSB_POWER_SP_MAXIMUM 2000


/************************************************************/
// Message: VPU_FAULTS_1_IHM
/************************************************************/
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM MODULINK_CAN_MSG_VPU_FAULTS_1_IHM
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_FRAME_ID 0xff1301

typedef struct{
    // CAN_SIG_VPU_IND_OVER_CURRENT , bits 0-0
    uint64_t CAN_SIG_VPU_IND_OVER_CURRENT:1;
    // CAN_SIG_VPU_LOAD_OVER_VOLTAGE , bits 1-1
    uint64_t CAN_SIG_VPU_LOAD_OVER_VOLTAGE:1;
    // CAN_SIG_VPU_BMS_FAULT , bits 2-2
    uint64_t CAN_SIG_VPU_BMS_FAULT:1;
    // CAN_SIG_VPU_SKIIP_1_FAULT , bits 3-3
    uint64_t CAN_SIG_VPU_SKIIP_1_FAULT:1;
    // CAN_SIG_VPU_SKIIP_2_FAULT , bits 4-4
    uint64_t CAN_SIG_VPU_SKIIP_2_FAULT:1;
    // CAN_SIG_VPU_SKIIP_1_OVER_TEMP , bits 5-5
    uint64_t CAN_SIG_VPU_SKIIP_1_OVER_TEMP:1;
    // CAN_SIG_VPU_SKIIP_2_OVER_TEMP , bits 6-6
    uint64_t CAN_SIG_VPU_SKIIP_2_OVER_TEMP:1;
    // CAN_SIG_VPU_IND_OVER_TEMP , bits 7-7
    uint64_t CAN_SIG_VPU_IND_OVER_TEMP:1;
    // CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MSG , bits 8-8
    uint64_t CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MSG:1;
    // undef 9-63 
    uint64_t undef:55;
}MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_t;

// Signal: VPU_IND_OVER_CURRENT
#define CAN_SIG_VPU_IND_OVER_CURRENT CAN_SIG_VPU_IND_OVER_CURRENT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_IND_OVER_CURRENT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_IND_OVER_CURRENT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_IND_OVER_CURRENT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_IND_OVER_CURRENT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_IND_OVER_CURRENT_MAXIMUM 1

// Signal: VPU_LOAD_OVER_VOLTAGE
#define CAN_SIG_VPU_LOAD_OVER_VOLTAGE CAN_SIG_VPU_LOAD_OVER_VOLTAGE
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_LOAD_OVER_VOLTAGE_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_LOAD_OVER_VOLTAGE_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_LOAD_OVER_VOLTAGE_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_LOAD_OVER_VOLTAGE_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_LOAD_OVER_VOLTAGE_MAXIMUM 1

// Signal: VPU_BMS_FAULT
#define CAN_SIG_VPU_BMS_FAULT CAN_SIG_VPU_BMS_FAULT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_BMS_FAULT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_BMS_FAULT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_BMS_FAULT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_BMS_FAULT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_BMS_FAULT_MAXIMUM 1

// Signal: VPU_SKIIP_1_FAULT
#define CAN_SIG_VPU_SKIIP_1_FAULT CAN_SIG_VPU_SKIIP_1_FAULT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_1_FAULT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_1_FAULT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_1_FAULT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_1_FAULT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_1_FAULT_MAXIMUM 1

// Signal: VPU_SKIIP_2_FAULT
#define CAN_SIG_VPU_SKIIP_2_FAULT CAN_SIG_VPU_SKIIP_2_FAULT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_2_FAULT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_2_FAULT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_2_FAULT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_2_FAULT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_2_FAULT_MAXIMUM 1

// Signal: VPU_SKIIP_1_OVER_TEMP
#define CAN_SIG_VPU_SKIIP_1_OVER_TEMP CAN_SIG_VPU_SKIIP_1_OVER_TEMP
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_1_OVER_TEMP_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_1_OVER_TEMP_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_1_OVER_TEMP_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_1_OVER_TEMP_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_1_OVER_TEMP_MAXIMUM 1

// Signal: VPU_SKIIP_2_OVER_TEMP
#define CAN_SIG_VPU_SKIIP_2_OVER_TEMP CAN_SIG_VPU_SKIIP_2_OVER_TEMP
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_2_OVER_TEMP_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_2_OVER_TEMP_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_2_OVER_TEMP_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_2_OVER_TEMP_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_SKIIP_2_OVER_TEMP_MAXIMUM 1

// Signal: VPU_IND_OVER_TEMP
#define CAN_SIG_VPU_IND_OVER_TEMP CAN_SIG_VPU_IND_OVER_TEMP
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_IND_OVER_TEMP_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_IND_OVER_TEMP_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_IND_OVER_TEMP_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_IND_OVER_TEMP_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_IND_OVER_TEMP_MAXIMUM 1

// Signal: VPU_EMERGENCY_SHUTDOWN_MSG
#define CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MSG CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MSG
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MSG_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MSG_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MSG_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MSG_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MSG_MAXIMUM 1


/************************************************************/
// Message: VPU_QSPY_IHM
/************************************************************/
#define MODULINK_CAN_MSG_VPU_QSPY_IHM MODULINK_CAN_MSG_VPU_QSPY_IHM
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_FRAME_ID 0xff1401

typedef struct{
    // CAN_SIG_VPU_BUFFER_DATA_SENDED , bits 0-7
    uint64_t CAN_SIG_VPU_BUFFER_DATA_SENDED:8;
    // CAN_SIG_VPU_QSPY_BYTE_0 , bits 8-15
    uint64_t CAN_SIG_VPU_QSPY_BYTE_0:8;
    // CAN_SIG_VPU_QSPY_BYTE_1 , bits 16-23
    uint64_t CAN_SIG_VPU_QSPY_BYTE_1:8;
    // CAN_SIG_VPU_QSPY_BYTE_2 , bits 24-31
    uint64_t CAN_SIG_VPU_QSPY_BYTE_2:8;
    // CAN_SIG_VPU_QSPY_BYTE_3 , bits 32-39
    uint64_t CAN_SIG_VPU_QSPY_BYTE_3:8;
    // CAN_SIG_VPU_QSPY_BYTE_4 , bits 40-47
    uint64_t CAN_SIG_VPU_QSPY_BYTE_4:8;
    // CAN_SIG_VPU_QSPY_BYTE_5 , bits 48-55
    uint64_t CAN_SIG_VPU_QSPY_BYTE_5:8;
    // CAN_SIG_VPU_QSPY_BYTE_6 , bits 56-63
    uint64_t CAN_SIG_VPU_QSPY_BYTE_6:8;
}MODULINK_CAN_MSG_VPU_QSPY_IHM_t;

// Signal: VPU_BUFFER_DATA_SENDED
#define CAN_SIG_VPU_BUFFER_DATA_SENDED CAN_SIG_VPU_BUFFER_DATA_SENDED
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_BUFFER_DATA_SENDED_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_BUFFER_DATA_SENDED_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_BUFFER_DATA_SENDED_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_BUFFER_DATA_SENDED_MINIMUM 1
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_BUFFER_DATA_SENDED_MAXIMUM 7

// Signal: VPU_QSPY_BYTE_0
#define CAN_SIG_VPU_QSPY_BYTE_0 CAN_SIG_VPU_QSPY_BYTE_0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_0_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_0_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_0_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_0_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_0_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_1
#define CAN_SIG_VPU_QSPY_BYTE_1 CAN_SIG_VPU_QSPY_BYTE_1
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_1_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_1_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_1_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_1_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_1_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_2
#define CAN_SIG_VPU_QSPY_BYTE_2 CAN_SIG_VPU_QSPY_BYTE_2
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_2_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_2_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_2_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_2_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_2_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_3
#define CAN_SIG_VPU_QSPY_BYTE_3 CAN_SIG_VPU_QSPY_BYTE_3
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_3_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_3_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_3_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_3_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_3_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_4
#define CAN_SIG_VPU_QSPY_BYTE_4 CAN_SIG_VPU_QSPY_BYTE_4
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_4_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_4_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_4_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_4_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_4_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_5
#define CAN_SIG_VPU_QSPY_BYTE_5 CAN_SIG_VPU_QSPY_BYTE_5
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_5_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_5_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_5_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_5_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_5_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_6
#define CAN_SIG_VPU_QSPY_BYTE_6 CAN_SIG_VPU_QSPY_BYTE_6
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_6_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_6_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_6_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_6_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_IHM_CAN_SIG_VPU_QSPY_BYTE_6_MAXIMUM 255

enum{
    MODULINK_CAN_MSG_IN_1_INDEX,
    MODULINK_CAN_MSG_IN_2_INDEX,
    MODULINK_CAN_MSG_VPU_MEASURES_1_IHM_INDEX,
    MODULINK_CAN_MSG_VPU_MEASURES_2_IHM_INDEX,
    MODULINK_CAN_MSG_VPU_SETPOINTS_1_IHM_INDEX,
    MODULINK_CAN_MSG_VPU_FAULTS_1_IHM_INDEX,
    MODULINK_CAN_MSG_VPU_QSPY_IHM_INDEX,
    MODULINK_CAN_MAX_MSG,
};

typedef struct{
    uint32_t msg_id;
    uint32_t mask;
    CAN_MsgObjType msgType;
    uint32_t  flags;
    uint16_t  dlc;
}MessageProprieties_t;

extern const MessageProprieties_t modulink_can_messages_proprieties[MODULINK_CAN_MAX_MSG];

//arg _CAN_MSG: the name of the message with prefix CAN_MSG_ 
//arg _CAN_SIG: the name of the signal  with prefix CAN_SIG_ 
//arg _PAYLOAD: payload arrived in the CAN 
//return VALUE: value decoded 

#define CAN_SIG_DECODE( _CAN_MSG , _CAN_SIG , _PAYLOAD ) \
( ( ( _CAN_MSG##_t *) &_PAYLOAD )->_CAN_SIG ) * ( (float) _CAN_MSG##_##_CAN_SIG##_SCALE) + _CAN_MSG##_##_CAN_SIG##_OFFSET


//arg _CAN_MSG: the name of the message with prefix CAN_MSG_ 
//arg _CAN_SIG: the name of the signal  with prefix CAN_SIG_ 
//arg _VALUE: the value to be encoded 
//return SIG_PAYLOAD: the value encoded 

#define CAN_SIG_ENCODE( _CAN_MSG , _CAN_SIG , _VALUE ) \
( _CAN_MSG##_##_CAN_SIG##_TRANSMISSION_TYPE ) ( ( _VALUE - _CAN_MSG##_##_CAN_SIG##_OFFSET)/( (float) _CAN_MSG##_##_CAN_SIG##_SCALE ) )


//arg _CAN_MSG: the name of the message with prefix CAN_MSG_ 
//arg _CAN_SIG: the name of the signal  with prefix CAN_SIG_ 
//arg _VALUE: the value to be encoded 
//return IS_VALID: boolean informing if this value is valid

#define CAN_SIG_IS_VALID( _CAN_MSG , _CAN_SIG , _VALUE ) \
( _CAN_MSG##_##_CAN_SIG##_MINIMUM <= _VALUE ) && ( _VALUE <= _CAN_MSG##_##_CAN_SIG##_MAXIMUM)


//arg _CAN_MSG: the name of the message with prefix CAN_MSG_ 
//arg _CAN_SIG: the name of the signal  with prefix CAN_SIG_ 
//arg _CAN_VALUE: the name of the value with prefix CAN_VALUE 
//return VALUE: value of the named value

#define CAN_GET_VALUE_BY_NAME( _CAN_MSG , _CAN_SIG , _CAN_VALUE ) \
( _CAN_MSG##_##_CAN_SIG##_##_CAN_VALUE )
