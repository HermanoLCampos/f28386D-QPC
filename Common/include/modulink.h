/************************************************************/
// Automatically generated C header file from CAN DBC file
// Source file name: modulink.dbc
// Date created: 2024-07-03
/************************************************************/




/************************************************************/
//====================Messages Proprieties====================
/************************************************************/



#define MODULINK_CAN_MSG_RECEIVE_ID 0x00ff8300
#define MODULINK_CAN_MSG_RECEIVE_MASK 0x1f0003ff



/************************************************************/
// Message: IHM_COMMANDS_1_VPU
/************************************************************/
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_FRAME_ID 0xff8000

typedef struct{
    // CAN_SIG_IHM_CONTROL_START_VPU , bits 0-0
    uint64_t CAN_SIG_IHM_CONTROL_START_VPU:1;
    // CAN_SIG_IHM_CONTROL_STOP_VPU , bits 1-1
    uint64_t CAN_SIG_IHM_CONTROL_STOP_VPU:1;
    // CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU , bits 2-2
    uint64_t CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU:1;
    // CAN_SIG_IHM_PRECHARGE_START_VPU , bits 3-3
    uint64_t CAN_SIG_IHM_PRECHARGE_START_VPU:1;
    // CAN_SIG_IHM_CLEAR_FAULT_VPU , bits 4-4
    uint64_t CAN_SIG_IHM_CLEAR_FAULT_VPU:1;
    // CAN_SIG_IHM_SOFT_RESET_VPU , bits 5-5
    uint64_t CAN_SIG_IHM_SOFT_RESET_VPU:1;
    // undef 6-63 
    uint64_t undef:58;
}MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_t;

// Signal: IHM_CONTROL_START_VPU
#define CAN_SIG_IHM_CONTROL_START_VPU CAN_SIG_IHM_CONTROL_START_VPU
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_START_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_START_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_START_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_START_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_START_VPU_MAXIMUM 1
// Named Values to Signal: IHM_CONTROL_START_VPU
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_START_VPU_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_START_VPU_CAN_VALUE_YES 1

// Signal: IHM_CONTROL_STOP_VPU
#define CAN_SIG_IHM_CONTROL_STOP_VPU CAN_SIG_IHM_CONTROL_STOP_VPU
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_STOP_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_STOP_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_STOP_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_STOP_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_STOP_VPU_MAXIMUM 1
// Named Values to Signal: IHM_CONTROL_STOP_VPU
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_STOP_VPU_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CONTROL_STOP_VPU_CAN_VALUE_YES 1

// Signal: IHM_EMERGENCY_SHUTDOWN_VPU
#define CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU_MAXIMUM 1
// Named Values to Signal: IHM_EMERGENCY_SHUTDOWN_VPU
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_EMERGENCY_SHUTDOWN_VPU_CAN_VALUE_YES 1

// Signal: IHM_PRECHARGE_START_VPU
#define CAN_SIG_IHM_PRECHARGE_START_VPU CAN_SIG_IHM_PRECHARGE_START_VPU
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_PRECHARGE_START_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_PRECHARGE_START_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_PRECHARGE_START_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_PRECHARGE_START_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_PRECHARGE_START_VPU_MAXIMUM 1
// Named Values to Signal: IHM_PRECHARGE_START_VPU
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_PRECHARGE_START_VPU_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_PRECHARGE_START_VPU_CAN_VALUE_YES 1

// Signal: IHM_CLEAR_FAULT_VPU
#define CAN_SIG_IHM_CLEAR_FAULT_VPU CAN_SIG_IHM_CLEAR_FAULT_VPU
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CLEAR_FAULT_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CLEAR_FAULT_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CLEAR_FAULT_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CLEAR_FAULT_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CLEAR_FAULT_VPU_MAXIMUM 1
// Named Values to Signal: IHM_CLEAR_FAULT_VPU
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CLEAR_FAULT_VPU_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_CLEAR_FAULT_VPU_CAN_VALUE_YES 1

// Signal: IHM_SOFT_RESET_VPU
#define CAN_SIG_IHM_SOFT_RESET_VPU CAN_SIG_IHM_SOFT_RESET_VPU
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_SOFT_RESET_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_SOFT_RESET_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_SOFT_RESET_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_SOFT_RESET_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_SOFT_RESET_VPU_MAXIMUM 1
// Named Values to Signal: IHM_SOFT_RESET_VPU
#define CAN_VALUE_NO CAN_VALUE_NO
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_SOFT_RESET_VPU_CAN_VALUE_NO 0
#define CAN_VALUE_YES CAN_VALUE_YES
#define MODULINK_CAN_MSG_IHM_COMMANDS_1_VPU_CAN_SIG_IHM_SOFT_RESET_VPU_CAN_VALUE_YES 1


/************************************************************/
// Message: IHM_SETPOINTS_1_VPU
/************************************************************/
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_FRAME_ID 0xff8100

typedef struct{
    // CAN_SIG_IHM_SETPOINT_ID_VPU , bits 0-15
    uint64_t CAN_SIG_IHM_SETPOINT_ID_VPU:16;
    // CAN_SIG_IHM_SETPOINT_REQUESTED_VPU , bits 16-31
    uint64_t CAN_SIG_IHM_SETPOINT_REQUESTED_VPU:16;
    // undef 32-63 
    uint64_t undef:32;
}MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_t;

// Signal: IHM_SETPOINT_ID_VPU
#define CAN_SIG_IHM_SETPOINT_ID_VPU CAN_SIG_IHM_SETPOINT_ID_VPU
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_ID_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_ID_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_ID_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_ID_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_ID_VPU_MAXIMUM 65535
// Named Values to Signal: IHM_SETPOINT_ID_VPU
#define CAN_VALUE_IL_CURRENT_SETPOINT CAN_VALUE_IL_CURRENT_SETPOINT
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_ID_VPU_CAN_VALUE_IL_CURRENT_SETPOINT 0
#define CAN_VALUE_IO_CURRENT_SETPOINT CAN_VALUE_IO_CURRENT_SETPOINT
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_ID_VPU_CAN_VALUE_IO_CURRENT_SETPOINT 1
#define CAN_VALUE_POWER_SETPOINT CAN_VALUE_POWER_SETPOINT
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_ID_VPU_CAN_VALUE_POWER_SETPOINT 2

// Signal: IHM_SETPOINT_REQUESTED_VPU
#define CAN_SIG_IHM_SETPOINT_REQUESTED_VPU CAN_SIG_IHM_SETPOINT_REQUESTED_VPU
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_REQUESTED_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_REQUESTED_VPU_SCALE 0.01
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_REQUESTED_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_REQUESTED_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_SETPOINTS_1_VPU_CAN_SIG_IHM_SETPOINT_REQUESTED_VPU_MAXIMUM 100


/************************************************************/
// Message: IHM_MANUAL_EVT_VPU
/************************************************************/
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_FRAME_ID 0xff8200

typedef struct{
    // CAN_SIG_IHM_COM_SIG_VPU , bits 0-15
    uint64_t CAN_SIG_IHM_COM_SIG_VPU:16;
    // CAN_SIG_IHM_PAYLOAD_VPU , bits 16-63
    uint64_t CAN_SIG_IHM_PAYLOAD_VPU:48;
}MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_t;

// Signal: IHM_COM_SIG_VPU
#define CAN_SIG_IHM_COM_SIG_VPU CAN_SIG_IHM_COM_SIG_VPU
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_IHM_COM_SIG_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_IHM_COM_SIG_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_IHM_COM_SIG_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_IHM_COM_SIG_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_IHM_COM_SIG_VPU_MAXIMUM 65535

// Signal: IHM_PAYLOAD_VPU
#define CAN_SIG_IHM_PAYLOAD_VPU CAN_SIG_IHM_PAYLOAD_VPU
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_IHM_PAYLOAD_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_IHM_PAYLOAD_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_IHM_PAYLOAD_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_IHM_PAYLOAD_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_MANUAL_EVT_VPU_CAN_SIG_IHM_PAYLOAD_VPU_MAXIMUM 2


/************************************************************/
// Message: IHM_QSPY_VPU
/************************************************************/
#define MODULINK_CAN_MSG_IHM_QSPY_VPU MODULINK_CAN_MSG_IHM_QSPY_VPU
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_FRAME_ID 0xff8300

typedef struct{
    // CAN_SIG_IHM_BUFFER_DATA_SENDED_VPU , bits 0-7
    uint64_t CAN_SIG_IHM_BUFFER_DATA_SENDED_VPU:8;
    // CAN_SIG_IHM_QSPY_BYTE_0_VPU , bits 8-15
    uint64_t CAN_SIG_IHM_QSPY_BYTE_0_VPU:8;
    // CAN_SIG_IHM_QSPY_BYTE_1_VPU , bits 16-23
    uint64_t CAN_SIG_IHM_QSPY_BYTE_1_VPU:8;
    // CAN_SIG_IHM_QSPY_BYTE_2_VPU , bits 24-31
    uint64_t CAN_SIG_IHM_QSPY_BYTE_2_VPU:8;
    // CAN_SIG_IHM_QSPY_BYTE_3_VPU , bits 32-39
    uint64_t CAN_SIG_IHM_QSPY_BYTE_3_VPU:8;
    // CAN_SIG_IHM_QSPY_BYTE_4_VPU , bits 40-47
    uint64_t CAN_SIG_IHM_QSPY_BYTE_4_VPU:8;
    // CAN_SIG_IHM_QSPY_BYTE_5_VPU , bits 48-55
    uint64_t CAN_SIG_IHM_QSPY_BYTE_5_VPU:8;
    // CAN_SIG_IHM_QSPY_BYTE_6_VPU , bits 56-63
    uint64_t CAN_SIG_IHM_QSPY_BYTE_6_VPU:8;
}MODULINK_CAN_MSG_IHM_QSPY_VPU_t;

// Signal: IHM_BUFFER_DATA_SENDED_VPU
#define CAN_SIG_IHM_BUFFER_DATA_SENDED_VPU CAN_SIG_IHM_BUFFER_DATA_SENDED_VPU
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_BUFFER_DATA_SENDED_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_BUFFER_DATA_SENDED_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_BUFFER_DATA_SENDED_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_BUFFER_DATA_SENDED_VPU_MINIMUM 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_BUFFER_DATA_SENDED_VPU_MAXIMUM 7

// Signal: IHM_QSPY_BYTE_0_VPU
#define CAN_SIG_IHM_QSPY_BYTE_0_VPU CAN_SIG_IHM_QSPY_BYTE_0_VPU
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_0_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_0_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_0_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_0_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_0_VPU_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_1_VPU
#define CAN_SIG_IHM_QSPY_BYTE_1_VPU CAN_SIG_IHM_QSPY_BYTE_1_VPU
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_1_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_1_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_1_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_1_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_1_VPU_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_2_VPU
#define CAN_SIG_IHM_QSPY_BYTE_2_VPU CAN_SIG_IHM_QSPY_BYTE_2_VPU
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_2_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_2_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_2_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_2_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_2_VPU_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_3_VPU
#define CAN_SIG_IHM_QSPY_BYTE_3_VPU CAN_SIG_IHM_QSPY_BYTE_3_VPU
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_3_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_3_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_3_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_3_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_3_VPU_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_4_VPU
#define CAN_SIG_IHM_QSPY_BYTE_4_VPU CAN_SIG_IHM_QSPY_BYTE_4_VPU
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_4_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_4_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_4_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_4_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_4_VPU_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_5_VPU
#define CAN_SIG_IHM_QSPY_BYTE_5_VPU CAN_SIG_IHM_QSPY_BYTE_5_VPU
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_5_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_5_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_5_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_5_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_5_VPU_MAXIMUM 255

// Signal: IHM_QSPY_BYTE_6_VPU
#define CAN_SIG_IHM_QSPY_BYTE_6_VPU CAN_SIG_IHM_QSPY_BYTE_6_VPU
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_6_VPU_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_6_VPU_SCALE 1
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_6_VPU_OFFSET 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_6_VPU_MINIMUM 0
#define MODULINK_CAN_MSG_IHM_QSPY_VPU_CAN_SIG_IHM_QSPY_BYTE_6_VPU_MAXIMUM 255


/************************************************************/
// Message: VPU_MEASURES_1
/************************************************************/
#define MODULINK_CAN_MSG_VPU_MEASURES_1 MODULINK_CAN_MSG_VPU_MEASURES_1
#define MODULINK_CAN_MSG_VPU_MEASURES_1_FRAME_ID 0xffa001

typedef struct{
    // CAN_SIG_VPU_SKIIP_1_CURRENT , bits 0-15
    uint64_t CAN_SIG_VPU_SKIIP_1_CURRENT:16;
    // CAN_SIG_VPU_SKIIP_2_CURRENT , bits 16-31
    uint64_t CAN_SIG_VPU_SKIIP_2_CURRENT:16;
    // CAN_SIG_VPU_SKIIP_1_VOLTAGE , bits 32-47
    uint64_t CAN_SIG_VPU_SKIIP_1_VOLTAGE:16;
    // CAN_SIG_VPU_SKIIP_2_VOLTAGE , bits 48-63
    uint64_t CAN_SIG_VPU_SKIIP_2_VOLTAGE:16;
}MODULINK_CAN_MSG_VPU_MEASURES_1_t;

// Signal: VPU_SKIIP_1_CURRENT
#define CAN_SIG_VPU_SKIIP_1_CURRENT CAN_SIG_VPU_SKIIP_1_CURRENT
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_1_CURRENT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_1_CURRENT_SCALE 1
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_1_CURRENT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_1_CURRENT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_1_CURRENT_MAXIMUM 3000

// Signal: VPU_SKIIP_2_CURRENT
#define CAN_SIG_VPU_SKIIP_2_CURRENT CAN_SIG_VPU_SKIIP_2_CURRENT
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_2_CURRENT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_2_CURRENT_SCALE 1
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_2_CURRENT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_2_CURRENT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_2_CURRENT_MAXIMUM 3000

// Signal: VPU_SKIIP_1_VOLTAGE
#define CAN_SIG_VPU_SKIIP_1_VOLTAGE CAN_SIG_VPU_SKIIP_1_VOLTAGE
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_1_VOLTAGE_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_1_VOLTAGE_SCALE 1
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_1_VOLTAGE_OFFSET 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_1_VOLTAGE_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_1_VOLTAGE_MAXIMUM 2000

// Signal: VPU_SKIIP_2_VOLTAGE
#define CAN_SIG_VPU_SKIIP_2_VOLTAGE CAN_SIG_VPU_SKIIP_2_VOLTAGE
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_2_VOLTAGE_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_2_VOLTAGE_SCALE 1
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_2_VOLTAGE_OFFSET 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_2_VOLTAGE_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_MEASURES_1_CAN_SIG_VPU_SKIIP_2_VOLTAGE_MAXIMUM 2000


/************************************************************/
// Message: VPU_MEASURES_2
/************************************************************/
#define MODULINK_CAN_MSG_VPU_MEASURES_2 MODULINK_CAN_MSG_VPU_MEASURES_2
#define MODULINK_CAN_MSG_VPU_MEASURES_2_FRAME_ID 0xffa101

typedef struct{
    // undef 0-63 
    uint64_t undef:64;
}MODULINK_CAN_MSG_VPU_MEASURES_2_t;


/************************************************************/
// Message: VPU_SETPOINTS_1
/************************************************************/
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1 MODULINK_CAN_MSG_VPU_SETPOINTS_1
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_FRAME_ID 0xffa201

typedef struct{
    // CAN_SIG_VPU_IND_FSBB_CURRENT_SP , bits 0-15
    uint64_t CAN_SIG_VPU_IND_FSBB_CURRENT_SP:16;
    // CAN_SIG_VPU_FSSB_POWER_SP , bits 16-31
    uint64_t CAN_SIG_VPU_FSSB_POWER_SP:16;
    // undef 32-63 
    uint64_t undef:32;
}MODULINK_CAN_MSG_VPU_SETPOINTS_1_t;

// Signal: VPU_IND_FSBB_CURRENT_SP
#define CAN_SIG_VPU_IND_FSBB_CURRENT_SP CAN_SIG_VPU_IND_FSBB_CURRENT_SP
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_CAN_SIG_VPU_IND_FSBB_CURRENT_SP_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_CAN_SIG_VPU_IND_FSBB_CURRENT_SP_SCALE 1
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_CAN_SIG_VPU_IND_FSBB_CURRENT_SP_OFFSET 0
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_CAN_SIG_VPU_IND_FSBB_CURRENT_SP_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_CAN_SIG_VPU_IND_FSBB_CURRENT_SP_MAXIMUM 2500

// Signal: VPU_FSSB_POWER_SP
#define CAN_SIG_VPU_FSSB_POWER_SP CAN_SIG_VPU_FSSB_POWER_SP
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_CAN_SIG_VPU_FSSB_POWER_SP_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_CAN_SIG_VPU_FSSB_POWER_SP_SCALE 1
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_CAN_SIG_VPU_FSSB_POWER_SP_OFFSET 0
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_CAN_SIG_VPU_FSSB_POWER_SP_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_SETPOINTS_1_CAN_SIG_VPU_FSSB_POWER_SP_MAXIMUM 2000


/************************************************************/
// Message: VPU_FAULTS_1
/************************************************************/
#define MODULINK_CAN_MSG_VPU_FAULTS_1 MODULINK_CAN_MSG_VPU_FAULTS_1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_FRAME_ID 0xffa301

typedef struct{
    // CAN_SIG_VPU_SKIIP1_OVERVOLTAGE , bits 0-0
    uint64_t CAN_SIG_VPU_SKIIP1_OVERVOLTAGE:1;
    // CAN_SIG_VPU_SKIIP1_OVERCURRENT , bits 1-1
    uint64_t CAN_SIG_VPU_SKIIP1_OVERCURRENT:1;
    // CAN_SIG_VPU_SKIIP1_OVERHEAT , bits 2-2
    uint64_t CAN_SIG_VPU_SKIIP1_OVERHEAT:1;
    // CAN_SIG_VPU_SKIIP1_HALT , bits 3-3
    uint64_t CAN_SIG_VPU_SKIIP1_HALT:1;
    // CAN_SIG_VPU_SKIIP1_ERROR , bits 4-4
    uint64_t CAN_SIG_VPU_SKIIP1_ERROR:1;
    // CAN_SIG_VPU_SKIIP2_OVERVOLTAGE , bits 5-5
    uint64_t CAN_SIG_VPU_SKIIP2_OVERVOLTAGE:1;
    // CAN_SIG_VPU_SKIIP2_OVERCURRENT , bits 6-6
    uint64_t CAN_SIG_VPU_SKIIP2_OVERCURRENT:1;
    // CAN_SIG_VPU_SKIIP2_OVERHEAT , bits 7-7
    uint64_t CAN_SIG_VPU_SKIIP2_OVERHEAT:1;
    // CAN_SIG_VPU_SKIIP2_HALT , bits 8-8
    uint64_t CAN_SIG_VPU_SKIIP2_HALT:1;
    // CAN_SIG_VPU_SKIIP2_ERROR , bits 9-9
    uint64_t CAN_SIG_VPU_SKIIP2_ERROR:1;
    // CAN_SIG_VPU_INDUCTOR_OVERHEAT , bits 10-10
    uint64_t CAN_SIG_VPU_INDUCTOR_OVERHEAT:1;
    // CAN_SIG_VPU_CAPACITOR_OVERHEAT , bits 11-11
    uint64_t CAN_SIG_VPU_CAPACITOR_OVERHEAT:1;
    // CAN_SIG_VPU_SETTLE_TIMEOUT , bits 12-12
    uint64_t CAN_SIG_VPU_SETTLE_TIMEOUT:1;
    // CAN_SIG_VPU_CLA_T1_WATCHDOG_TIMEOUT , bits 13-13
    uint64_t CAN_SIG_VPU_CLA_T1_WATCHDOG_TIMEOUT:1;
    // CAN_SIG_VPU_CLA_T2_WATCHDOG_TIMEOUT , bits 14-14
    uint64_t CAN_SIG_VPU_CLA_T2_WATCHDOG_TIMEOUT:1;
    // CAN_SIG_VPU_EMERGENCY_SHUTDOWN , bits 15-15
    uint64_t CAN_SIG_VPU_EMERGENCY_SHUTDOWN:1;
    // undef 16-63 
    uint64_t undef:48;
}MODULINK_CAN_MSG_VPU_FAULTS_1_t;

// Signal: VPU_SKIIP1_OVERVOLTAGE
#define CAN_SIG_VPU_SKIIP1_OVERVOLTAGE CAN_SIG_VPU_SKIIP1_OVERVOLTAGE
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERVOLTAGE_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERVOLTAGE_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERVOLTAGE_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERVOLTAGE_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERVOLTAGE_MAXIMUM 1

// Signal: VPU_SKIIP1_OVERCURRENT
#define CAN_SIG_VPU_SKIIP1_OVERCURRENT CAN_SIG_VPU_SKIIP1_OVERCURRENT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERCURRENT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERCURRENT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERCURRENT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERCURRENT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERCURRENT_MAXIMUM 1

// Signal: VPU_SKIIP1_OVERHEAT
#define CAN_SIG_VPU_SKIIP1_OVERHEAT CAN_SIG_VPU_SKIIP1_OVERHEAT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERHEAT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERHEAT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERHEAT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERHEAT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_OVERHEAT_MAXIMUM 1

// Signal: VPU_SKIIP1_HALT
#define CAN_SIG_VPU_SKIIP1_HALT CAN_SIG_VPU_SKIIP1_HALT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_HALT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_HALT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_HALT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_HALT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_HALT_MAXIMUM 1

// Signal: VPU_SKIIP1_ERROR
#define CAN_SIG_VPU_SKIIP1_ERROR CAN_SIG_VPU_SKIIP1_ERROR
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_ERROR_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_ERROR_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_ERROR_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_ERROR_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP1_ERROR_MAXIMUM 1

// Signal: VPU_SKIIP2_OVERVOLTAGE
#define CAN_SIG_VPU_SKIIP2_OVERVOLTAGE CAN_SIG_VPU_SKIIP2_OVERVOLTAGE
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERVOLTAGE_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERVOLTAGE_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERVOLTAGE_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERVOLTAGE_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERVOLTAGE_MAXIMUM 1

// Signal: VPU_SKIIP2_OVERCURRENT
#define CAN_SIG_VPU_SKIIP2_OVERCURRENT CAN_SIG_VPU_SKIIP2_OVERCURRENT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERCURRENT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERCURRENT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERCURRENT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERCURRENT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERCURRENT_MAXIMUM 1

// Signal: VPU_SKIIP2_OVERHEAT
#define CAN_SIG_VPU_SKIIP2_OVERHEAT CAN_SIG_VPU_SKIIP2_OVERHEAT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERHEAT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERHEAT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERHEAT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERHEAT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_OVERHEAT_MAXIMUM 1

// Signal: VPU_SKIIP2_HALT
#define CAN_SIG_VPU_SKIIP2_HALT CAN_SIG_VPU_SKIIP2_HALT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_HALT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_HALT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_HALT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_HALT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_HALT_MAXIMUM 1

// Signal: VPU_SKIIP2_ERROR
#define CAN_SIG_VPU_SKIIP2_ERROR CAN_SIG_VPU_SKIIP2_ERROR
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_ERROR_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_ERROR_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_ERROR_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_ERROR_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SKIIP2_ERROR_MAXIMUM 1

// Signal: VPU_INDUCTOR_OVERHEAT
#define CAN_SIG_VPU_INDUCTOR_OVERHEAT CAN_SIG_VPU_INDUCTOR_OVERHEAT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_INDUCTOR_OVERHEAT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_INDUCTOR_OVERHEAT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_INDUCTOR_OVERHEAT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_INDUCTOR_OVERHEAT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_INDUCTOR_OVERHEAT_MAXIMUM 1

// Signal: VPU_CAPACITOR_OVERHEAT
#define CAN_SIG_VPU_CAPACITOR_OVERHEAT CAN_SIG_VPU_CAPACITOR_OVERHEAT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CAPACITOR_OVERHEAT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CAPACITOR_OVERHEAT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CAPACITOR_OVERHEAT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CAPACITOR_OVERHEAT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CAPACITOR_OVERHEAT_MAXIMUM 1

// Signal: VPU_SETTLE_TIMEOUT
#define CAN_SIG_VPU_SETTLE_TIMEOUT CAN_SIG_VPU_SETTLE_TIMEOUT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SETTLE_TIMEOUT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SETTLE_TIMEOUT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SETTLE_TIMEOUT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SETTLE_TIMEOUT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_SETTLE_TIMEOUT_MAXIMUM 1

// Signal: VPU_CLA_T1_WATCHDOG_TIMEOUT
#define CAN_SIG_VPU_CLA_T1_WATCHDOG_TIMEOUT CAN_SIG_VPU_CLA_T1_WATCHDOG_TIMEOUT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CLA_T1_WATCHDOG_TIMEOUT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CLA_T1_WATCHDOG_TIMEOUT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CLA_T1_WATCHDOG_TIMEOUT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CLA_T1_WATCHDOG_TIMEOUT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CLA_T1_WATCHDOG_TIMEOUT_MAXIMUM 1

// Signal: VPU_CLA_T2_WATCHDOG_TIMEOUT
#define CAN_SIG_VPU_CLA_T2_WATCHDOG_TIMEOUT CAN_SIG_VPU_CLA_T2_WATCHDOG_TIMEOUT
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CLA_T2_WATCHDOG_TIMEOUT_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CLA_T2_WATCHDOG_TIMEOUT_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CLA_T2_WATCHDOG_TIMEOUT_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CLA_T2_WATCHDOG_TIMEOUT_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_CLA_T2_WATCHDOG_TIMEOUT_MAXIMUM 1

// Signal: VPU_EMERGENCY_SHUTDOWN
#define CAN_SIG_VPU_EMERGENCY_SHUTDOWN CAN_SIG_VPU_EMERGENCY_SHUTDOWN
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_EMERGENCY_SHUTDOWN_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_EMERGENCY_SHUTDOWN_SCALE 1
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_EMERGENCY_SHUTDOWN_OFFSET 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_FAULTS_1_CAN_SIG_VPU_EMERGENCY_SHUTDOWN_MAXIMUM 1


/************************************************************/
// Message: VPU_QSPY
/************************************************************/
#define MODULINK_CAN_MSG_VPU_QSPY MODULINK_CAN_MSG_VPU_QSPY
#define MODULINK_CAN_MSG_VPU_QSPY_FRAME_ID 0xffa401

typedef struct{
    // CAN_SIG_VPU_BUFFER_DATA_SENDED , bits 0-7
    uint64_t CAN_SIG_VPU_BUFFER_DATA_SENDED:8;
    // CAN_SIG_VPU_QSPY_BYTE_0 , bits 8-15
    uint64_t CAN_SIG_VPU_QSPY_BYTE_0:8;
    // CAN_SIG_VPU_QSPY_BYTE_1 , bits 16-23
    uint64_t CAN_SIG_VPU_QSPY_BYTE_1:8;
    // CAN_SIG_VPU_QSPY_BYTE_2 , bits 24-31
    uint64_t CAN_SIG_VPU_QSPY_BYTE_2:8;
    // CAN_SIG_VPU_QSPY_BYTE_3 , bits 32-39
    uint64_t CAN_SIG_VPU_QSPY_BYTE_3:8;
    // CAN_SIG_VPU_QSPY_BYTE_4 , bits 40-47
    uint64_t CAN_SIG_VPU_QSPY_BYTE_4:8;
    // CAN_SIG_VPU_QSPY_BYTE_5 , bits 48-55
    uint64_t CAN_SIG_VPU_QSPY_BYTE_5:8;
    // CAN_SIG_VPU_QSPY_BYTE_6 , bits 56-63
    uint64_t CAN_SIG_VPU_QSPY_BYTE_6:8;
}MODULINK_CAN_MSG_VPU_QSPY_t;

// Signal: VPU_BUFFER_DATA_SENDED
#define CAN_SIG_VPU_BUFFER_DATA_SENDED CAN_SIG_VPU_BUFFER_DATA_SENDED
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_BUFFER_DATA_SENDED_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_BUFFER_DATA_SENDED_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_BUFFER_DATA_SENDED_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_BUFFER_DATA_SENDED_MINIMUM 1
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_BUFFER_DATA_SENDED_MAXIMUM 7

// Signal: VPU_QSPY_BYTE_0
#define CAN_SIG_VPU_QSPY_BYTE_0 CAN_SIG_VPU_QSPY_BYTE_0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_0_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_0_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_0_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_0_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_0_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_1
#define CAN_SIG_VPU_QSPY_BYTE_1 CAN_SIG_VPU_QSPY_BYTE_1
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_1_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_1_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_1_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_1_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_1_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_2
#define CAN_SIG_VPU_QSPY_BYTE_2 CAN_SIG_VPU_QSPY_BYTE_2
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_2_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_2_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_2_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_2_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_2_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_3
#define CAN_SIG_VPU_QSPY_BYTE_3 CAN_SIG_VPU_QSPY_BYTE_3
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_3_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_3_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_3_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_3_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_3_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_4
#define CAN_SIG_VPU_QSPY_BYTE_4 CAN_SIG_VPU_QSPY_BYTE_4
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_4_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_4_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_4_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_4_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_4_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_5
#define CAN_SIG_VPU_QSPY_BYTE_5 CAN_SIG_VPU_QSPY_BYTE_5
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_5_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_5_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_5_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_5_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_5_MAXIMUM 255

// Signal: VPU_QSPY_BYTE_6
#define CAN_SIG_VPU_QSPY_BYTE_6 CAN_SIG_VPU_QSPY_BYTE_6
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_6_TRANSMISSION_TYPE int64_t
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_6_SCALE 1
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_6_OFFSET 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_6_MINIMUM 0
#define MODULINK_CAN_MSG_VPU_QSPY_CAN_SIG_VPU_QSPY_BYTE_6_MAXIMUM 255


/************************************************************/
// Message: VPU_SYSTEM_STATUS
/************************************************************/
#define MODULINK_CAN_MSG_VPU_SYSTEM_STATUS MODULINK_CAN_MSG_VPU_SYSTEM_STATUS
#define MODULINK_CAN_MSG_VPU_SYSTEM_STATUS_FRAME_ID 0xffa501

typedef struct{
    // undef 0-63 
    uint64_t undef:64;
}MODULINK_CAN_MSG_VPU_SYSTEM_STATUS_t;

enum{
    MODULINK_CAN_MSG_IN_1_INDEX,
    MODULINK_CAN_MSG_IN_2_INDEX,
    MODULINK_CAN_MSG_VPU_MEASURES_1_INDEX,
    MODULINK_CAN_MSG_VPU_MEASURES_2_INDEX,
    MODULINK_CAN_MSG_VPU_SETPOINTS_1_INDEX,
    MODULINK_CAN_MSG_VPU_FAULTS_1_INDEX,
    MODULINK_CAN_MSG_VPU_QSPY_INDEX,
    MODULINK_CAN_MSG_VPU_SYSTEM_STATUS_INDEX,
    MODULINK_CAN_MAX_MSG,
};

typedef struct{
    uint32_t msg_id;
    uint32_t mask;
    CAN_MsgObjType msgType;
    uint32_t  flags;
    uint16_t  dlc;
}MessageProprieties_t;

extern const MessageProprieties_t modulink_can_messages_proprieties[MODULINK_CAN_MAX_MSG];

//arg _CAN_MSG: the name of the message with prefix CAN_MSG_ 
//arg _CAN_SIG: the name of the signal  with prefix CAN_SIG_ 
//arg _PAYLOAD: payload arrived in the CAN 
//return VALUE: value decoded 

#define CAN_SIG_DECODE( _CAN_MSG , _CAN_SIG , _PAYLOAD ) \
( ( ( _CAN_MSG##_t *) &_PAYLOAD )->_CAN_SIG ) * ( (float) _CAN_MSG##_##_CAN_SIG##_SCALE) + _CAN_MSG##_##_CAN_SIG##_OFFSET


//arg _CAN_MSG: the name of the message with prefix CAN_MSG_ 
//arg _CAN_SIG: the name of the signal  with prefix CAN_SIG_ 
//arg _VALUE: the value to be encoded 
//return SIG_PAYLOAD: the value encoded 

#define CAN_SIG_ENCODE( _CAN_MSG , _CAN_SIG , _VALUE ) \
( _CAN_MSG##_##_CAN_SIG##_TRANSMISSION_TYPE ) ( ( _VALUE - _CAN_MSG##_##_CAN_SIG##_OFFSET)/( (float) _CAN_MSG##_##_CAN_SIG##_SCALE ) )


//arg _CAN_MSG: the name of the message with prefix CAN_MSG_ 
//arg _CAN_SIG: the name of the signal  with prefix CAN_SIG_ 
//arg _VALUE: the value to be encoded 
//return IS_VALID: boolean informing if this value is valid

#define CAN_SIG_IS_VALID( _CAN_MSG , _CAN_SIG , _VALUE ) \
( _CAN_MSG##_##_CAN_SIG##_MINIMUM <= _VALUE ) && ( _VALUE <= _CAN_MSG##_##_CAN_SIG##_MAXIMUM)


//arg _CAN_MSG: the name of the message with prefix CAN_MSG_ 
//arg _CAN_SIG: the name of the signal  with prefix CAN_SIG_ 
//arg _CAN_VALUE: the name of the value with prefix CAN_VALUE 
//return VALUE: value of the named value

#define CAN_GET_VALUE_BY_NAME( _CAN_MSG , _CAN_SIG , _CAN_VALUE ) \
( _CAN_MSG##_##_CAN_SIG##_##_CAN_VALUE )
