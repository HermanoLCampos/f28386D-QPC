//$file${.::Cores_Project::CPU2::qm_files::main_qm.h} vvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: main_model.qm
// File:  ${.::Cores_Project::CPU2::qm_files::main_qm.h}
//
// This code has been generated by QM 6.1.1 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open source software: you can redistribute it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
//
// NOTE:
// Alternatively, this generated code may be distributed under the terms
// of Quantum Leaps commercial licenses, which expressly supersede the GNU
// General Public License and are specifically designed for licensees
// interested in retaining the proprietary status of their code.
//
// Contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${.::Cores_Project::CPU2::qm_files::main_qm.h} ^^^^^^^^^^^^^^^^^^^^^
#ifndef MAIN_QM_H_
#define MAIN_QM_H_

#include "qpc.h"
#include "bsp_basic.h"

//================================================
//====================Signals=====================
//================================================

//$declare${CPU2::Signals} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${CPU2::Signals::private_signals} ..........................................
enum private_signals {
// Publish Subscribe Signals
    TIMEOUT_SIG = Q_USER_SIG,

    // - Only PRIVATE

    MAX_PUB_SIG,

    // COMMON Signals
    RUNNING_QF_SIG,
    INIT_COMPLETE_SIG,

    // IPC OC Signals
    IPC_RECEIVE_MSG_SIG,
    IPC_SEND_MSG_SIG,
    IPC_FULL_BUS_SIG,
    IPC_RESET_CH_SIG,

    MAX_PRIVATE_SIG,
};
//$enddecl${CPU2::Signals} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//$declare${Shared} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${Shared::Signals::shared_signals} .........................................
enum shared_signals {
    SHARED_SIGNALS_INIT = 128,
    // - GLOBAL

    // - lOCAL

    MAX_SIG
};

//${Shared::Event_Types::OC_Evt} .............................................
typedef struct {
// protected:
    QEvt super;

// public:
    uint16_t ID;
} OC_Evt;

//${Shared::Event_Types::OC_TimeEvt} .........................................
typedef struct {
// protected:
    QTimeEvt super;

// public:
    uint16_t ID;
} OC_TimeEvt;
//$enddecl${Shared} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//================================================
//===================Priorities===================
//================================================

//$declare${CPU2::ao_priority} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${CPU2::ao_priority} .......................................................
enum ao_priority {
    // Priority in ascendance order
    IDLE_TASK=0U,
    AO_COMMUNICATION_PRIO,
};
//$enddecl${CPU2::ao_priority} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//================================================
//================Immutable-Events================
//================================================

//$declare${CPU2::Immutable_Events} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${CPU2::Immutable_Events::im_evt_running_qf} ...............................
extern QEvt const im_evt_running_qf;

//${CPU2::Immutable_Events::im_evt_init_complete} ............................
extern QEvt const im_evt_init_complete;
//$enddecl${CPU2::Immutable_Events} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//================================================
//=================Active-Objects=================
//================================================

// AO_Communication
//$declare${CPU2::AOs::AO_Communication::globals} vvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${CPU2::AOs::AO_Communication::globals::p_ao_communication} ................
extern QActive * const p_ao_communication;

//${CPU2::AOs::AO_Communication::globals::ao_communication_ctor} .............
void ao_communication_ctor(const QActive  * const pAO);
//$enddecl${CPU2::AOs::AO_Communication::globals} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//================================================
//=============Orthogonal-Components==============
//================================================

//$declare${CPU2::OC_enum} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${CPU2::OC_enum::IPC::ipc_named} ...........................................
enum ipc_named {
    OC_IPC_CPU2_CPU1_ID,
    OC_IPC_CPU2_CM_ID,
    OC_IPC_NUM_OF_INST,
};
//$enddecl${CPU2::OC_enum} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif // MAIN_QM_H_
